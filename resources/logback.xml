<!-- Logback Configuration. See http://logback.qos.ch/ -->
<configuration>

  <!-- property resource="log_dev_app.properties" /-->

   <!-- Console (STDOUT) output. -->
  <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">

    <!-- Only print log messages at level WARN or higher. -->
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>DEBUG</level>
    </filter>

    <!-- Default encoder is ch.qos.logback.classic.encoder.PatternLayoutEncoder -->
    <encoder>
      <!-- [%thread]  -->
      <pattern>%date{HH:mm:ss.SSS} %-5level %logger %msg%n</pattern>
      <charset>UTF-8</charset>
    </encoder>
  </appender>

  <!-- TODO: Conditional does not kick in -->
  <!--if condition='isDefined("TCP_ENDPOINT")'>
    <then-->
      <appender name="NET_JSON" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
        <!--destination>localhost:3000</destination-->
        <destination>${TCP_ENDPOINT}</destination>

        <encoder class="net.logstash.logback.encoder.LogstashEncoder">
          <includeCallerData>true</includeCallerData>
          <fieldNames>
            <levelValue>[ignore]</levelValue>
          </fieldNames>
          <!--customFields></customFields-->
        </encoder>
      </appender>
      <root level="ALL">
        <appender-ref ref="NET_JSON"/>
      </root>
    <!--/then>
  </if-->

  <!-- Root log level is "ALL", meaning all log levels are emitted. -->
  <root level="ALL">
    <appender-ref ref="CONSOLE" />
    <!--appender-ref ref="NET_JSON" /-->
  </root>

  <!-- Make java.util.logging more efficient at disabled levels.
       See http://logback.qos.ch/manual/configuration.html#LevelChangePropagator -->
  <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
    <resetJUL>true</resetJUL>
  </contextListener>
</configuration>
